1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT `students`.`id`, `students`.`name`, `students`.`surname`, `degrees`.`id`, `degrees`.`name` AS degree_name
FROM `students` 
INNER JOIN `degrees`
ON `students`.`degree_id` = `degrees`.`id`
WHERE `degrees`.`name` = 'Corso di Laurea in Economia'


2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze   


SELECT `departments`.`id`, `departments`.`name` AS department_name, `degrees`.`id`, `degrees`.`name` AS degree_name, `level`
FROM `degrees` 
INNER JOIN `departments`
ON `degrees`.`department_id` = `departments`.`id`
WHERE  `departments`.`id` = 7 AND `level` = 'magistrale';



3. Selezionare tutti i corsi in cui insegna Fulvio  Amato (id=44)


SELECT `teachers`.`name` AS teacher_name, `teachers`.`surname` AS teacher_surname, `courses`.`*` AS course_name 
FROM `teachers` 
INNER JOIN `course_teacher`
ON `teachers`.`id` = `course_teacher`.`teacher_id`
INNER JOIN `courses`
ON `courses`.`id` = `course_teacher`.`course_id`
WHERE `teachers`.`id` = 44


4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il
relativo dipartimento, in ordine alfabetico per cognome e nome


SELECT `students`.`*`, `degrees`.`*`, `departments`.`name`   
FROM `students` 
INNER JOIN `degrees`
ON `students`.`degree_id` = `degrees`.`id`
INNER JOIN `departments`
ON `degrees`.`department_id` = `departments`.`id`
ORDER BY `students`.`surname`, `students`.`name`;



5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti


SELECT `degrees`.`name` AS 'degree_name', `courses`.`name` AS 'course_name', `teachers`.`name` AS 'teacher_name', `teachers`.`surname`AS 'teacher_surname'
FROM `degrees` 
INNER JOIN `courses`
ON `courses`.`degree_id` = `degrees`.`id`
INNER JOIN `course_teacher`
ON `course_teacher`.`course_id` = `courses`.`id`
INNER JOIN `teachers`
ON `course_teacher`.`teacher_id` = `teachers`.`id`

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)


SELECT DISTINCT `teachers`.`name`, `teachers`. `surname`, `departments`.`id` AS 'dept_id', `departments`.`name` AS 'department_name'
FROM `teachers` 
INNER JOIN `course_teacher`
ON `course_teacher`.`teacher_id` = `teachers`.`id`
INNER JOIN `courses`
ON `course_teacher`.`course_id` = `courses`.`id`
INNER JOIN `degrees`
ON `courses`.`degree_id` = `degrees`.`id`
INNER JOIN `departments`
ON `degrees`.`department_id` = `departments`.`id`
WHERE  `departments`.`id` = 5



7. BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per superare ciascuno dei suoi esami


SELECT `students`.`id`, `students`.`name`, `students`.`surname`, `courses`.`name`, `degrees`.`name`, 
COUNT(`exam_student`.`vote`) AS `exam_attemps`,
MAX(`exam_student`.`vote`) AS `best_vote`
FROM `students`
INNER JOIN `exam_student`
ON `exam_student`. `student_id` = `students`.`id`
INNER JOIN `exams`
ON `exam_student`. `exam_id` = `exams`.`id`
INNER JOIN `courses`
ON `exams`.`course_id` = `courses`.`id`
INNER JOIN `degrees`
ON `courses`.`degree_id` = `degrees`.`id`
GROUP BY `students`.`id`, `courses`.`id`
HAVING `best_vote` >= 18
